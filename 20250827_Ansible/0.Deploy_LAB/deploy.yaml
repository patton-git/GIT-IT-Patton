---
- name: Deploy Ansible Lab
  hosts: localhost
  gather_facts: no
  vars:
    ansible_python_interpreter: /bin/python3
    vcenter_username: "s00@lab.git"
    vcenter_password: "VMware123!"
    esxi_username: "root"
    esxi_password: "VMware123!"
    template_jumpbox: "250827-DC"
    snapshot_name: "Template"

    LAB_SID: 
    - { id: S00, vcsa: sa-vcsa-01.lab.git, dcn: Datacenter, host: esxi-01.lab.git, parent: "2.Students/", dsn: vsanDatastore }
    - { id: S01, vcsa: sa-vcsa-01.lab.git, dcn: Datacenter, host: esxi-01.lab.git, parent: "3.Students/", dsn: sa-vSAN }
    - { id: S02, vcsa: sa-vcsa-01.lab.git, dcn: Datacenter, host: esxi-01.lab.git, parent: "3.Students/", dsn: sa-vSAN }
    - { id: S03, vcsa: sa-vcsa-01.lab.git, dcn: Datacenter, host: esxi-01.lab.git, parent: "3.Students/", dsn: sa-vSAN }
    - { id: S04, vcsa: sa-vcsa-01.lab.git, dcn: Datacenter, host: esxi-01.lab.git, parent: "3.Students/", dsn: sa-vSAN }

  tasks:
  - name: 01. Create LAB VM Folder
    community.vmware.vcenter_folder:
      hostname: "{{ item.vcsa }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ item.dcn }}"
      folder_type: vm
      folder_name: "{{ item.id }}"
      parent_folder: "{{ item.parent }}"
      state: present
    loop: "{{ LAB_SID }}"
    delegate_to: localhost
    register: sub_folder_creation_result

  - name: 02. Create LAB Standard vSwitch
    community.vmware.vmware_vswitch:
      hostname: "{{ item.host }}"
      username: "{{ esxi_username }}"
      password: "{{ esxi_password }}"
      validate_certs: false
      switch: "{{ item.id }}"
    loop: "{{ LAB_SID }}"
    delegate_to: localhost
    register: lab_switch_creation_result

  - name: 03. Adding Portgroup to LAB Switch
    community.vmware.vmware_portgroup:
      hostname: "{{ item.host }}"
      username: "{{ esxi_username }}"
      password: "{{ esxi_password }}"
      esxi_hostname: "{{ item.host }}"
      validate_certs: no
      switch: "{{ item.id }}"
      portgroup: "{{ item.id }}-Ansible"
    loop: "{{ LAB_SID }}"
    delegate_to: localhost
    register: lab_port_creation_result
    when: lab_switch_creation_result.msg == "All items completed"

  - name: 04. Deploy Ansible(AD-NAT-WSL) vm
    community.vmware.vmware_guest:
      hostname: "{{ item.vcsa }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      name: "{{ item.id }}-Ansible"
      state: "poweredon"
      datacenter: "{{ item.dcn }}"
      folder: "{{ item.parent }}{{ item.id }}"
      esxi_hostname: "{{ item.host }}"
      datastore: "{{ item.dsn }}"
      template: "{{ template_jumpbox }}"
      linked_clone: True
      snapshot_src: "{{ snapshot_name }}"
      networks:
        - name: "VM-10.50.141.x"
          label: "Network adapter 1"
        - name: "{{ item.id }}-Ansible"
          label: "Network adapter 2"
    loop: "{{ LAB_SID }}"
    delegate_to: localhost
    register: lab_vm_creation_result
    when: lab_port_creation_result.msg == "All items completed"

  - name: 05. waiting Ansible VM Booting
    wait_for:
      timeout: 120
    delegate_to: localhost

  - name: 06. Copy Install script to VM
    community.vmware.vmware_guest_file_operation:
      hostname: "{{ item.vcsa }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: false
      vm_id: "{{ item.id}}-Ansible"
      vm_id_type: vm_name
      vm_username: 'Administrator'
      vm_password: 'VMware1!'
      copy:
        src: "/mnt/c/ansible/20250318_Ansible/install.ps1"
        dest: "c:\\Code\\install.ps1"
        overwrite: true
    loop: "{{ LAB_SID }}"
    delegate_to: localhost
    register: copy_script_result

  - name: 07. Install AnyViewer Program in Ansible VM
    community.vmware.vmware_vm_shell:
      hostname: "{{ item.vcsa }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: false
      vm_id: "{{ item.id }}-Ansible"
      vm_id_type: vm_name
      vm_username: Administrator
      vm_password: VMware1!
      vm_shell: 'c:\windows\system32\windowspowershell\v1.0\powershell.exe'
      vm_shell_args: '-command "(c:\Code\install.ps1)"'
      vm_shell_cwd: 'c:\Users\Administrator'
      wait_for_process: True
      timeout: 240
    loop: "{{ LAB_SID }}"
    delegate_to: localhost
    register: Install_Program_result

#  - name: Check Previous Result
#    debug:
#      msg: "{{ Install_Program_result }}"
